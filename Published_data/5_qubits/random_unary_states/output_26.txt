****Starting Evolution: 
 circuits {'cir45': [(0, 2)], 'cir20': [(0, 1)], 'cir3': [(0,)], 'cir13': [(0, 3, 4)], 'cir19': [(0,)], 'cir25': [(0,)], 'cir33': [(0, 4, 3)], 'cir36': [(0, 4, 2)], 'cir0': [(3,)], 'cir1': [(3,)], 'cir2': [(2, 0)], 'cir5': [(1, 4)], 'cir6': [(1,)], 'cir7': [(1, 4, 0)], 'cir8': [(4, 0)], 'cir9': [(3, 4)], 'cir10': [(2, 4, 3)], 'cir11': [(2, 0)], 'cir12': [(3, 4, 0)], 'cir14': [(4,)], 'cir15': [(4, 2)], 'cir16': [(3, 1, 0)], 'cir17': [(3,)], 'cir18': [(1, 4, 3)], 'cir21': [(4, 1, 2)], 'cir22': [(2, 1)], 'cir23': [(4, 2, 0)], 'cir24': [(2, 1, 0)], 'cir26': [(4, 1)], 'cir27': [(3, 0)], 'cir28': [(1, 0, 3)], 'cir29': [(4, 3, 0)], 'cir30': [(3, 4, 0)], 'cir31': [(4, 0)], 'cir32': [(1, 0)], 'cir34': [(3, 0, 1)], 'cir35': [(3,)], 'cir37': [(3, 4)], 'cir38': [(4, 1, 0)], 'cir39': [(4, 0)], 'cir40': [(4,)], 'cir41': [(4,)], 'cir42': [(2, 3)], 'cir43': [(4,)], 'cir44': [(2, 4)], 'cir46': [(1,)], 'cir47': [(4,)], 'cir48': [(1, 4)], 'cir49': [(1,)], 'cir4': [(0, 4)]}, 
 fitness [0.0, 5.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 20.0] 

**** best transforamtion at the begining: 
+1.0000|11110>            --> +1.0000|01110>           
+1.0000|00001>            --> +1.0000|00001>           
+1.0000|11110>            --> +1.0000|01110>           
+1.0000|10111>            --> +1.0000|00111>           
+1.0000|00001>            --> +1.0000|00001>           
   ###   On generation 1 of 10000
*** population details: 5 best circuits 
 circuits {'cir45': [(0, 2)], 'cir36': [(1,), (3,), (0, 2)], 'cir48': [(4, 1, 2), (0, 3), (1, 0), (4, 0), (1,)], 'cir49': [(4, 1, 2), (0, 3), (1, 0), (4, 0), (1,), (1, 4, 3)], 'cir20': [(0, 1)]}, 
 fitness [0.0, 0.0, 0.0, 0.0, 5.0] 

**** best transforamtion of this generation: 
+1.0000|11110>            --> +1.0000|01110>           
+1.0000|00001>            --> +1.0000|00001>           
+1.0000|11110>            --> +1.0000|01110>           
+1.0000|10111>            --> +1.0000|00111>           
+1.0000|00001>            --> +1.0000|00001>           
Infidelity :  0.0
****Starting Evolution: 
 circuits {'cir2': [(2, 0), (1, 2)], 'cir15': [(4, 2), (3,), (3, 0, 1), (0,), (1, 2, 0), (0, 2, 1), (0,)], 'cir1': [(3,), (3,), (2, 4, 0), (3,)], 'cir10': [(2, 4, 3), (3, 0), (2,), (4, 3), (3,)], 'cir11': [(2, 0)], 'cir14': [(4,)], 'cir16': [(3, 1, 0)], 'cir23': [(4, 2, 0)], 'cir24': [(2, 1, 0)], 'cir26': [(4, 1)], 'cir27': [(3, 0)], 'cir28': [(1, 0, 3)], 'cir29': [(4, 3, 0), (4, 3, 0), (1, 0, 4), (3, 0)], 'cir30': [(3, 4, 0)], 'cir31': [(4, 0)], 'cir32': [(1, 0)], 'cir34': [(3, 0, 1)], 'cir37': [(3, 4)], 'cir38': [(4, 1, 0)], 'cir39': [(4, 0)], 'cir40': [(4,), (3, 4), (2, 0), (2,), (1, 0), (2,)], 'cir41': [(4,)], 'cir42': [(2, 3)], 'cir43': [(4,)], 'cir44': [(2, 4)], 'cir47': [(4,)], 'cir6': [(1,), (2,), (2,)], 'cir12': [(0, 3, 4)], 'cir13': [(0, 3, 4), (3, 0), (2, 1, 4)], 'cir18': [(1, 4, 3)], 'cir33': [(0, 4, 3), (3, 2, 4), (3, 0, 4), (4, 2, 3)], 'cir36': [(0, 4, 2)], 'cir46': [(1,), (2, 4, 0), (4,), (4,)], 'cir49': [(1,)], 'cir5': [(1, 4), (0, 3, 4), (1,), (1, 4)], 'cir21': [(4, 1, 2), (0, 3), (1, 0), (1,), (4, 0), (1,), (1, 4, 3)], 'cir17': [(2,), (0, 2), (0,)], 'cir7': [(1, 4, 0), (2,), (4, 0, 3), (0, 4, 2), (4, 3, 1)], 'cir8': [(4, 0), (3,), (2,), (2, 0), (0, 2)], 'cir20': [(2, 3), (1,), (0, 1, 4), (4, 2)], 'cir22': [(2, 1), (0, 4), (1,)], 'cir45': [(0, 2), (0, 2, 4), (2,), (4, 0), (0,), (1, 4)], 'cir3': [(0,), (0, 1, 4), (0, 3), (4,), (0, 4, 2)], 'cir4': [(0, 4)], 'cir48': [(1, 4)], 'cir0': [(3,), (1,), (3,), (0, 3)], 'cir9': [(3, 4), (1, 4), (1, 3), (3, 4), (0,), (4, 0), (2, 3, 4)], 'cir19': [(0,)], 'cir35': [(3,), (1,), (3,), (0, 2), (0, 1), (1,), (1,)], 'cir25': [(3,), (1,), (0,), (4, 3, 1)]}, 
 fitness [9.0, 13.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 31.0, 31.0, 35.0, 36.0, 36.0, 39.0, 39.0, 39.0, 44.0, 45.0, 45.0, 49.0, 49.0, 53.0, 53.0, 57.0] 

**** best transforamtion at the begining: 
+1.0000|01110>            --> +1.0000|00110>           
+1.0000|00001>            --> +1.0000|00001>           
+1.0000|01110>            --> +1.0000|00110>           
+1.0000|00111>            --> +1.0000|01111>           
+1.0000|00001>            --> +1.0000|00001>           
   ###   On generation 1 of 10000
*** population details: 5 best circuits 
 circuits {'cir2': [(2, 0), (1, 2)], 'cir6': [(1, 2, 3), (4,)], 'cir33': [(1, 2, 3), (4,), (3, 4, 2)], 'cir19': [(3, 1, 4), (3, 0), (4, 3), (3,), (2,), (1, 2, 4), (1,)], 'cir15': [(4, 2), (3,), (3, 0, 1), (0,), (1, 2, 0), (0, 2, 1), (0,)]}, 
 fitness [9.0, 9.0, 9.0, 9.0, 13.0] 

**** best transforamtion of this generation: 
+1.0000|01110>            --> +1.0000|00110>           
+1.0000|00001>            --> +1.0000|00001>           
+1.0000|01110>            --> +1.0000|00110>           
+1.0000|00111>            --> +1.0000|01111>           
+1.0000|00001>            --> +1.0000|00001>           
Infidelity :  1.0
   ###   On generation 2 of 10000
*** population details: 5 best circuits 
 circuits {'cir28': [(2, 1, 0), (3, 2, 1), (1, 4), (4, 2), (3,), (4,), (1,)], 'cir2': [(2, 0), (1, 2)], 'cir6': [(1, 2, 3), (4,)], 'cir33': [(1, 2, 3), (4,), (3, 4, 2)], 'cir19': [(3, 1, 4), (3, 0), (4, 3), (3,), (2,), (1, 2, 4), (1,)]}, 
 fitness [0.0, 9.0, 9.0, 9.0, 9.0] 

**** best transforamtion of this generation: 
+1.0000|01110>            --> +1.0000|00110>           
+1.0000|00001>            --> +1.0000|00010>           
+1.0000|01110>            --> +1.0000|00110>           
+1.0000|00111>            --> +1.0000|00101>           
+1.0000|00001>            --> +1.0000|00010>           
Infidelity :  0.0
circuit: 
X(target=(0,), control=(2,))
X(target=(2,), control=(1, 0))
X(target=(3,), control=(2, 1))
X(target=(1,), control=(4,))
X(target=(4,), control=(2,))
X(target=(3,))
X(target=(4,))
X(target=(1,))

