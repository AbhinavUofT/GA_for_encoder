****Starting Evolution: 
 circuits {'cir13': [(0, 2, 1)], 'cir24': [(0, 1, 6)], 'cir47': [(0, 1, 5)], 'cir14': [(0,)], 'cir17': [(0,)], 'cir39': [(0,)], 'cir58': [(0,)], 'cir59': [(0, 5, 3)], 'cir66': [(0, 1, 3)], 'cir69': [(0, 4)], 'cir0': [(5, 0, 2)], 'cir1': [(5, 4)], 'cir2': [(1,)], 'cir3': [(1, 4)], 'cir4': [(6, 5)], 'cir5': [(6,)], 'cir6': [(6, 5)], 'cir7': [(2, 1)], 'cir8': [(5, 3, 0)], 'cir9': [(4,)], 'cir10': [(3, 1)], 'cir11': [(1, 0, 2)], 'cir12': [(6,)], 'cir15': [(1, 5, 6)], 'cir16': [(4, 2)], 'cir18': [(3, 0, 1)], 'cir19': [(6, 4)], 'cir20': [(3, 5, 2)], 'cir21': [(2, 1, 0)], 'cir22': [(4,)], 'cir23': [(6, 4)], 'cir25': [(5, 6)], 'cir26': [(4,)], 'cir27': [(4, 5)], 'cir28': [(1, 0, 2)], 'cir29': [(6, 1)], 'cir30': [(5, 0, 1)], 'cir31': [(6, 1)], 'cir32': [(4, 2)], 'cir33': [(5, 0)], 'cir34': [(5, 0, 2)], 'cir35': [(4, 6, 2)], 'cir36': [(4,)], 'cir37': [(3,)], 'cir38': [(2, 1, 0)], 'cir40': [(2, 0)], 'cir41': [(2,)], 'cir42': [(6, 4)], 'cir43': [(2, 1, 3)], 'cir44': [(3, 6, 2)], 'cir45': [(2, 0, 5)], 'cir46': [(5, 4, 2)], 'cir48': [(2, 6)], 'cir49': [(1, 5, 0)], 'cir50': [(2, 6, 0)], 'cir51': [(2,)], 'cir52': [(6, 2)], 'cir53': [(6, 2, 0)], 'cir54': [(5, 4)], 'cir55': [(4, 2, 0)], 'cir56': [(5,)], 'cir57': [(2, 6, 0)], 'cir60': [(3, 4)], 'cir61': [(1, 3, 6)], 'cir62': [(3, 2, 6)], 'cir63': [(3, 0, 4)], 'cir64': [(2,)], 'cir65': [(5,)], 'cir67': [(5, 4, 1)], 'cir68': [(5, 0, 2)]}, 
 fitness [5.0, 5.0, 5.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0] 

**** best transforamtion at the begining: 
+1.0000|0000011>          --> +1.0000|0000011>         
+1.0000|0001001>          --> +1.0000|0001001>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1110000>          --> +1.0000|0110000>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1100011>          --> +1.0000|1100011>         
+1.0000|1111111>          --> +1.0000|0111111>         
   ###   On generation 1 of 10000
*** population details: 5 best circuits 
 circuits {'cir13': [(0, 2, 1)], 'cir47': [(0, 1, 5)], 'cir42': [(3, 0, 1), (6, 1), (0, 5), (4,), (0, 3, 2)], 'cir57': [(0, 2), (3,), (0,), (0,)], 'cir60': [(6, 4), (1,), (0, 2), (5,)]}, 
 fitness [5.0, 5.0, 5.0, 5.0, 5.0] 

**** best transforamtion of this generation: 
+1.0000|0000011>          --> +1.0000|0000011>         
+1.0000|0001001>          --> +1.0000|0001001>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1110000>          --> +1.0000|0110000>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1100011>          --> +1.0000|1100011>         
+1.0000|1111111>          --> +1.0000|0111111>         
Infidelity :  1.0
   ###   On generation 2 of 10000
*** population details: 5 best circuits 
 circuits {'cir13': [(0, 2, 1)], 'cir47': [(0, 1, 5)], 'cir42': [(3, 0, 1), (6, 1), (0, 5), (4,), (0, 3, 2)], 'cir57': [(0, 2), (3,), (0,), (0,)], 'cir60': [(6, 4), (1,), (0, 2), (5,)]}, 
 fitness [5.0, 5.0, 5.0, 5.0, 5.0] 

**** best transforamtion of this generation: 
+1.0000|0000011>          --> +1.0000|0000011>         
+1.0000|0001001>          --> +1.0000|0001001>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1110000>          --> +1.0000|0110000>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1100011>          --> +1.0000|1100011>         
+1.0000|1111111>          --> +1.0000|0111111>         
Infidelity :  1.0
   ###   On generation 3 of 10000
*** population details: 5 best circuits 
 circuits {'cir13': [(0, 2, 1)], 'cir47': [(0, 1, 5)], 'cir42': [(3, 0, 1), (6, 1), (0, 5), (4,), (0, 3, 2)], 'cir60': [(6, 4), (1,), (0, 2), (5,)], 'cir61': [(0, 2), (3,), (0,), (0,), (6,)]}, 
 fitness [5.0, 5.0, 5.0, 5.0, 5.0] 

**** best transforamtion of this generation: 
+1.0000|0000011>          --> +1.0000|0000011>         
+1.0000|0001001>          --> +1.0000|0001001>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1110000>          --> +1.0000|0110000>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1100011>          --> +1.0000|1100011>         
+1.0000|1111111>          --> +1.0000|0111111>         
Infidelity :  1.0
   ###   On generation 4 of 10000
*** population details: 5 best circuits 
 circuits {'cir13': [(0, 2, 1)], 'cir47': [(0, 1, 5)], 'cir42': [(3, 0, 1), (6, 1), (0, 5), (4,), (0, 3, 2)], 'cir60': [(6, 4), (1,), (0, 2), (5,)], 'cir61': [(0, 2), (3,), (0,), (0,), (6,)]}, 
 fitness [5.0, 5.0, 5.0, 5.0, 5.0] 

**** best transforamtion of this generation: 
+1.0000|0000011>          --> +1.0000|0000011>         
+1.0000|0001001>          --> +1.0000|0001001>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1110000>          --> +1.0000|0110000>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1111111>          --> +1.0000|0111111>         
+1.0000|1100011>          --> +1.0000|1100011>         
+1.0000|1111111>          --> +1.0000|0111111>         
Infidelity :  1.0
   ###   On generation 5 of 10000
*** population details: 5 best circuits 
 circuits {'cir18': [(0,), (4,), (1,), (5, 2, 1), (5, 1), (0, 1)], 'cir38': [(0,), (4,), (1,), (5, 2, 1), (5, 1), (0, 1), (6, 5, 4)], 'cir35': [(0,), (4,), (1,), (5, 2, 1), (5, 1), (0, 1), (6, 5, 4)], 'cir13': [(0, 2, 1)], 'cir47': [(0, 1, 5)]}, 
 fitness [0.0, 0.0, 0.0, 5.0, 5.0] 

**** best transforamtion of this generation: 
+1.0000|0000011>          --> +1.0000|0100101>         
+1.0000|0001001>          --> +1.0000|0101111>         
+1.0000|1111111>          --> +1.0000|0011011>         
+1.0000|1110000>          --> +1.0000|0010100>         
+1.0000|1111111>          --> +1.0000|0011011>         
+1.0000|1111111>          --> +1.0000|0011011>         
+1.0000|1111111>          --> +1.0000|0011011>         
+1.0000|1100011>          --> +1.0000|0000111>         
+1.0000|1111111>          --> +1.0000|0011011>         
Infidelity :  0.0
****Starting Evolution: 
 circuits {'cir2': [(1,), (6,), (1, 5), (6, 4), (3,), (6, 2, 3), (5,), (2, 4)], 'cir3': [(4, 0, 5)], 'cir5': [(6,), (3,)], 'cir8': [(5, 3, 0), (6, 5)], 'cir11': [(1, 0, 2), (5, 0), (6, 1), (3, 1), (2, 4), (3,)], 'cir13': [(0, 2, 1), (6, 1), (5,)], 'cir19': [(6, 4), (4,), (6, 4)], 'cir20': [(3, 5, 2)], 'cir21': [(2, 1, 0), (5,)], 'cir25': [(3,), (2,), (2,), (5,)], 'cir26': [(5,)], 'cir27': [(4, 1), (6,), (5,)], 'cir28': [(1, 0, 2)], 'cir29': [(6, 1)], 'cir31': [(6, 1), (1, 4)], 'cir32': [(4, 2), (2, 5), (2, 0, 5)], 'cir34': [(5, 0, 2)], 'cir35': [(4, 6, 2)], 'cir36': [(4,)], 'cir37': [(3,)], 'cir38': [(2, 1, 0)], 'cir39': [(0,), (6, 5, 2), (0,), (2,)], 'cir40': [(2, 0)], 'cir41': [(2,)], 'cir42': [(6, 4)], 'cir43': [(2, 1, 3)], 'cir44': [(3, 6, 2)], 'cir45': [(2, 0, 5)], 'cir46': [(5, 4, 2)], 'cir48': [(2, 6)], 'cir49': [(1, 5, 0)], 'cir50': [(2, 6, 0)], 'cir52': [(6, 2)], 'cir53': [(6, 2, 0)], 'cir54': [(5, 4)], 'cir55': [(4, 2, 0)], 'cir56': [(5,), (3, 5, 6)], 'cir57': [(2, 6, 0)], 'cir60': [(3, 4)], 'cir62': [(3, 2, 6)], 'cir63': [(3, 0, 4)], 'cir64': [(2,)], 'cir65': [(5,)], 'cir67': [(5, 4, 1)], 'cir68': [(5, 0, 2)], 'cir66': [(0, 1, 3), (0, 4, 1), (2, 0)], 'cir24': [(0, 1, 6)], 'cir1': [(5, 4), (6, 3, 1), (4,), (2, 6), (1, 2), (5, 4)], 'cir58': [(0,), (0, 2), (3,), (0,), (0,), (6,)], 'cir69': [(0, 4), (0, 2), (0, 2), (2, 5, 1), (6, 0, 1), (2, 5, 3), (0, 2)], 'cir0': [(5, 0, 2), (0, 4)], 'cir6': [(4, 6, 5), (4,), (1, 3)], 'cir61': [(1, 3, 6)], 'cir9': [(4,), (1,), (5,), (2, 4, 3)], 'cir15': [(1, 5, 6), (2,), (2,), (2, 0), (4, 6, 0)], 'cir18': [(3, 0, 1), (4,), (6, 1), (4,), (0, 3, 2), (0, 2, 1)], 'cir7': [(2, 1), (0, 3), (2, 6), (5, 1), (4, 6), (4, 0, 5), (6,)], 'cir47': [(0, 1, 5), (1, 2, 6)], 'cir59': [(0, 5, 3), (4, 2, 3), (2,), (6, 3, 0)], 'cir10': [(3, 1), (1,), (0, 5), (4, 6, 1), (1, 6, 2)], 'cir12': [(5,), (0, 5), (4,), (1,), (2,)], 'cir30': [(5, 0, 1), (3,), (0, 5, 6)], 'cir4': [(6, 5), (6, 4), (2,), (1,), (2,), (0, 2)], 'cir23': [(6, 4), (5,), (1,), (0, 2), (5,)], 'cir33': [(5, 0), (6, 3), (2,), (0, 2), (1,), (0,), (2,), (6,)], 'cir17': [(0,), (6, 3), (5, 1, 0), (5, 1, 0), (3,)], 'cir51': [(2,), (4,), (1, 0, 3), (0,), (2, 4, 0)], 'cir16': [(1, 3), (5,), (0,)], 'cir14': [(0,), (1,), (4, 6), (6,)], 'cir22': [(0,), (1, 0, 5), (1,), (1,), (6, 4)]}, 
 fitness [18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 22.0, 26.0, 27.0, 35.0, 35.0, 44.0, 54.0, 54.0, 63.0, 63.0, 63.0, 67.0, 67.0, 67.0, 76.0, 76.0, 76.0, 87.0, 87.0, 87.0, 89.0, 89.0, 105.0, 109.0, 109.0] 

**** best transforamtion at the begining: 
+1.0000|0100101>          --> +1.0000|0011111>         
+1.0000|0101111>          --> +1.0000|0110101>         
+1.0000|0011011>          --> +1.0000|0010000>         
+1.0000|0010100>          --> +1.0000|0101111>         
+1.0000|0011011>          --> +1.0000|0010000>         
+1.0000|0011011>          --> +1.0000|0010000>         
+1.0000|0011011>          --> +1.0000|0010000>         
+1.0000|0000111>          --> +1.0000|0011101>         
+1.0000|0011011>          --> +1.0000|0010000>         
   ###   On generation 1 of 10000
*** population details: 5 best circuits 
 circuits {'cir2': [(1,), (6,), (1, 5), (6, 4), (3,), (6, 2, 3), (5,), (2, 4)], 'cir3': [(4, 0, 5)], 'cir5': [(6,), (3,)], 'cir8': [(5, 3, 0), (6, 5)], 'cir11': [(1, 0, 2), (5, 0), (6, 1), (3, 1), (2, 4), (3,)]}, 
 fitness [18.0, 18.0, 18.0, 18.0, 18.0] 

**** best transforamtion of this generation: 
+1.0000|0100101>          --> +1.0000|0011111>         
+1.0000|0101111>          --> +1.0000|0110101>         
+1.0000|0011011>          --> +1.0000|0010000>         
+1.0000|0010100>          --> +1.0000|0101111>         
+1.0000|0011011>          --> +1.0000|0010000>         
+1.0000|0011011>          --> +1.0000|0010000>         
+1.0000|0011011>          --> +1.0000|0010000>         
+1.0000|0000111>          --> +1.0000|0011101>         
+1.0000|0011011>          --> +1.0000|0010000>         
Infidelity :  2.0
   ###   On generation 2 of 10000
*** population details: 5 best circuits 
 circuits {'cir2': [(1,), (6,), (1, 5), (6, 4), (3,), (6, 2, 3), (5,), (2, 4)], 'cir3': [(4, 0, 5)], 'cir5': [(6,), (3,)], 'cir8': [(5, 3, 0), (6, 5)], 'cir11': [(1, 0, 2), (5, 0), (6, 1), (3, 1), (2, 4), (3,)]}, 
 fitness [18.0, 18.0, 18.0, 18.0, 18.0] 

**** best transforamtion of this generation: 
+1.0000|0100101>          --> +1.0000|0011111>         
+1.0000|0101111>          --> +1.0000|0110101>         
+1.0000|0011011>          --> +1.0000|0010000>         
+1.0000|0010100>          --> +1.0000|0101111>         
+1.0000|0011011>          --> +1.0000|0010000>         
+1.0000|0011011>          --> +1.0000|0010000>         
+1.0000|0011011>          --> +1.0000|0010000>         
+1.0000|0000111>          --> +1.0000|0011101>         
+1.0000|0011011>          --> +1.0000|0010000>         
Infidelity :  2.0
   ###   On generation 3 of 10000
*** population details: 5 best circuits 
 circuits {'cir2': [(1,), (6,), (1, 5), (6, 4), (3,), (6, 2, 3), (5,), (2, 4)], 'cir3': [(4, 0, 5)], 'cir5': [(6,), (3,)], 'cir8': [(5, 3, 0), (6, 5)], 'cir11': [(1, 0, 2), (5, 0), (6, 1), (3, 1), (2, 4), (3,)]}, 
 fitness [18.0, 18.0, 18.0, 18.0, 18.0] 

**** best transforamtion of this generation: 
+1.0000|0100101>          --> +1.0000|0011111>         
+1.0000|0101111>          --> +1.0000|0110101>         
+1.0000|0011011>          --> +1.0000|0010000>         
+1.0000|0010100>          --> +1.0000|0101111>         
+1.0000|0011011>          --> +1.0000|0010000>         
+1.0000|0011011>          --> +1.0000|0010000>         
+1.0000|0011011>          --> +1.0000|0010000>         
+1.0000|0000111>          --> +1.0000|0011101>         
+1.0000|0011011>          --> +1.0000|0010000>         
Infidelity :  2.0
   ###   On generation 4 of 10000
*** population details: 5 best circuits 
 circuits {'cir12': [(6,), (3,), (5, 4), (3, 1), (3, 4), (4, 6, 1), (2,), (1, 2, 5)], 'cir2': [(1,), (6,), (1, 5), (6, 4), (3,), (6, 2, 3), (5,), (2, 4)], 'cir3': [(4, 0, 5)], 'cir5': [(6,), (3,)], 'cir8': [(5, 3, 0), (6, 5)]}, 
 fitness [9.0, 18.0, 18.0, 18.0, 18.0] 

**** best transforamtion of this generation: 
+1.0000|0100101>          --> +1.0000|0011110>         
+1.0000|0101111>          --> +1.0000|0110100>         
+1.0000|0011011>          --> +1.0000|0000010>         
+1.0000|0010100>          --> +1.0000|0000111>         
+1.0000|0011011>          --> +1.0000|0000010>         
+1.0000|0011011>          --> +1.0000|0000010>         
+1.0000|0011011>          --> +1.0000|0000010>         
+1.0000|0000111>          --> +1.0000|0010100>         
+1.0000|0011011>          --> +1.0000|0000010>         
Infidelity :  1.0
   ###   On generation 5 of 10000
*** population details: 5 best circuits 
 circuits {'cir12': [(6,), (3,), (5, 4), (3, 1), (3, 4), (4, 6, 1), (2,), (1, 2, 5)], 'cir2': [(1,), (6,), (1, 5), (6, 4), (3,), (6, 2, 3), (5,), (2, 4)], 'cir3': [(4, 0, 5)], 'cir5': [(6,), (3,)], 'cir8': [(5, 3, 0), (6, 5)]}, 
 fitness [9.0, 18.0, 18.0, 18.0, 18.0] 

**** best transforamtion of this generation: 
+1.0000|0100101>          --> +1.0000|0011110>         
+1.0000|0101111>          --> +1.0000|0110100>         
+1.0000|0011011>          --> +1.0000|0000010>         
+1.0000|0010100>          --> +1.0000|0000111>         
+1.0000|0011011>          --> +1.0000|0000010>         
+1.0000|0011011>          --> +1.0000|0000010>         
+1.0000|0011011>          --> +1.0000|0000010>         
+1.0000|0000111>          --> +1.0000|0010100>         
+1.0000|0011011>          --> +1.0000|0000010>         
Infidelity :  1.0
   ###   On generation 6 of 10000
*** population details: 5 best circuits 
 circuits {'cir12': [(6,), (3,), (5, 4), (3, 1), (3, 4), (4, 6, 1), (2,), (1, 2, 5)], 'cir10': [(5, 3, 0), (6, 3, 1), (6, 5), (6, 5), (1, 2), (1,)], 'cir2': [(1,), (6,), (1, 5), (6, 4), (3,), (6, 2, 3), (5,), (2, 4)], 'cir3': [(4, 0, 5)], 'cir5': [(6,), (3,)]}, 
 fitness [9.0, 9.0, 18.0, 18.0, 18.0] 

**** best transforamtion of this generation: 
+1.0000|0100101>          --> +1.0000|0011110>         
+1.0000|0101111>          --> +1.0000|0110100>         
+1.0000|0011011>          --> +1.0000|0000010>         
+1.0000|0010100>          --> +1.0000|0000111>         
+1.0000|0011011>          --> +1.0000|0000010>         
+1.0000|0011011>          --> +1.0000|0000010>         
+1.0000|0011011>          --> +1.0000|0000010>         
+1.0000|0000111>          --> +1.0000|0010100>         
+1.0000|0011011>          --> +1.0000|0000010>         
Infidelity :  1.0
   ###   On generation 7 of 10000
*** population details: 5 best circuits 
 circuits {'cir43': [(5, 3, 0), (6, 3, 1), (6, 5), (1, 6, 2), (6, 5, 1), (6, 3, 1), (1, 6)], 'cir52': [(5, 3, 0), (6, 3, 1), (6, 5), (1, 6, 2), (6, 5, 1), (6, 3, 1), (1, 6), (3,)], 'cir12': [(6,), (3,), (5, 4), (3, 1), (3, 4), (4, 6, 1), (2,), (1, 2, 5)], 'cir10': [(5, 3, 0), (6, 3, 1), (6, 5), (6, 5), (1, 2), (1,)], 'cir45': [(5, 3, 0), (6, 3, 1), (6, 5), (1, 2), (1,), (3, 6, 4)]}, 
 fitness [0.0, 0.0, 9.0, 9.0, 9.0] 

**** best transforamtion of this generation: 
+1.0000|0100101>          --> +1.0000|0000101>         
+1.0000|0101111>          --> +1.0000|0001111>         
+1.0000|0011011>          --> +1.0000|0011010>         
+1.0000|0010100>          --> +1.0000|0010100>         
+1.0000|0011011>          --> +1.0000|0011010>         
+1.0000|0011011>          --> +1.0000|0011010>         
+1.0000|0011011>          --> +1.0000|0011010>         
+1.0000|0000111>          --> +1.0000|0000110>         
+1.0000|0011011>          --> +1.0000|0011010>         
Infidelity :  0.0
****Starting Evolution: 
 circuits {'cir5': [(6,), (3,), (3,), (2,)], 'cir44': [(3, 6, 2), (5, 6, 1), (6,), (2, 5)], 'cir56': [(5,), (3, 5, 6), (5,), (2,)], 'cir62': [(3, 2, 6), (2,), (3, 2, 6), (3, 1)], 'cir64': [(2,)], 'cir69': [(0, 4), (0, 2), (0, 2), (2, 5, 1), (6, 0, 1), (2, 5, 3), (0, 2)], 'cir3': [(4, 0, 5), (4,)], 'cir13': [(0, 2, 1), (6, 1), (5,), (1,), (5, 1, 4), (4, 2, 1), (5, 4), (1,)], 'cir20': [(3, 5, 2), (1, 2), (1, 2), (5,), (2, 1, 6), (3,)], 'cir21': [(2, 1, 0), (1, 2, 5), (1, 2, 5)], 'cir25': [(3,), (2,), (2,), (5,)], 'cir26': [(5,), (3, 2), (3, 2)], 'cir32': [(4, 2), (2, 5), (2, 0, 5), (3, 1), (2,)], 'cir35': [(4, 6, 2)], 'cir36': [(6, 3), (5, 2)], 'cir37': [(3,)], 'cir39': [(0,), (6, 5, 2), (0,), (2,), (5, 4, 1), (2,)], 'cir43': [(2, 1, 3)], 'cir46': [(5, 4, 2), (4, 1), (6,)], 'cir47': [(0, 1, 5), (1, 2, 6)], 'cir49': [(1, 5, 0)], 'cir52': [(6, 2)], 'cir53': [(6, 2, 0), (5,), (6,), (6, 2, 0), (6, 4)], 'cir54': [(5, 4), (5, 1, 4), (4,), (5,), (4, 6)], 'cir55': [(4, 2, 0), (4, 1, 6)], 'cir60': [(3, 4)], 'cir63': [(3, 0, 4)], 'cir66': [(0, 1, 3), (0, 4, 1), (2, 0)], 'cir67': [(5, 4, 1)], 'cir15': [(1, 5, 6), (2,), (2,), (2, 0), (4, 6, 0)], 'cir28': [(1, 5, 6)], 'cir30': [(5, 0, 1), (3,), (0, 5, 6)], 'cir34': [(1, 3, 6), (3,)], 'cir40': [(2, 0), (5, 3, 1), (1, 3, 4), (4,)], 'cir61': [(1, 3, 6)], 'cir27': [(6,), (6,), (2, 4), (3, 5, 4)], 'cir29': [(6, 1), (1, 5, 4)], 'cir48': [(2, 6)], 'cir59': [(0, 5, 3), (4, 2, 3), (2,), (6, 3, 0)], 'cir58': [(0,), (0, 2), (3,), (0,), (0,), (6,)], 'cir18': [(3, 0, 1), (4,), (6, 1), (4,), (0, 3, 2), (0, 2, 1)], 'cir0': [(5, 0, 2), (0, 4), (6, 4, 1), (2,), (4, 1), (2, 5)], 'cir2': [(1,), (6,), (1, 5), (6, 4), (3,), (6, 2, 3), (5,), (2, 4), (6, 2), (5,), (2, 6, 3), (2, 6, 3), (3,)], 'cir9': [(4,), (1,), (5,), (2, 4, 3)], 'cir11': [(1, 0, 2), (5, 0), (6, 1), (3, 1), (2, 4), (3,), (1,), (2, 1, 5), (5, 4, 3)], 'cir31': [(6, 1), (1, 4)], 'cir8': [(6, 5), (4, 6), (4, 5, 3), (1, 2), (4, 3)], 'cir6': [(4, 6, 5), (4,), (1, 3)], 'cir24': [(0, 1, 6), (2, 6, 1), (4,), (2, 6, 3), (1, 4), (4,)], 'cir38': [(2, 1, 0), (6, 4), (1, 5)], 'cir7': [(2, 1), (0, 3), (2, 6), (5, 1), (4, 6), (4, 0, 5), (6,)], 'cir50': [(2, 6, 0), (1, 4, 3), (1,)], 'cir12': [(5,), (0, 5), (4,), (1,), (2,)], 'cir17': [(0,), (6, 3), (5, 1, 0), (5, 1, 0), (3,)], 'cir19': [(6, 4), (4,), (6, 4), (6,), (4, 5), (1,)], 'cir41': [(2,), (1,), (2,)], 'cir42': [(6, 4), (5, 6), (5,), (5, 6), (1,), (5, 6)], 'cir45': [(2, 0, 5), (1,)], 'cir57': [(3, 1, 2), (1,), (5, 2, 1)], 'cir68': [(5, 0, 2), (6,), (5,), (2, 4, 6), (1,)], 'cir1': [(5, 4), (6, 3, 1), (4,), (2, 6), (1, 2), (5, 4)], 'cir51': [(2,), (4,), (1, 0, 3), (0,), (2, 4, 0)], 'cir65': [(5,), (3, 1), (2, 6, 4), (1,), (5, 1), (5, 1)], 'cir4': [(6, 5), (6, 4), (2,), (1,), (2,), (0, 2)], 'cir23': [(6, 4), (5,), (1,), (0, 2), (5,)], 'cir33': [(5, 0), (6, 3), (2,), (0, 2), (1,), (0,), (2,), (6,)], 'cir16': [(1, 3), (5,), (0,)], 'cir10': [(3, 1), (1,), (0, 5), (4, 6, 1), (1, 6, 2)], 'cir22': [(0,), (1, 0, 5), (1,), (1,), (6, 4)], 'cir14': [(0,), (1,), (4, 6), (6,)]}, 
 fitness [39.0, 39.0, 39.0, 39.0, 39.0, 52.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 78.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 104.0, 104.0, 104.0, 112.0, 117.0, 118.0, 125.0, 125.0, 125.0, 125.0, 125.0, 126.0, 131.0, 131.0, 144.0, 152.0, 152.0, 153.0, 165.0, 165.0, 165.0, 165.0, 165.0, 165.0, 165.0, 168.0, 181.0, 181.0, 189.0, 189.0, 189.0, 193.0, 201.0, 201.0, 213.0] 

**** best transforamtion at the begining: 
+1.0000|0000101>          --> +1.0000|0010100>         
+1.0000|0001111>          --> +1.0000|0011110>         
+1.0000|0011010>          --> +1.0000|0001011>         
+1.0000|0010100>          --> +1.0000|0000101>         
+1.0000|0011010>          --> +1.0000|0001011>         
+1.0000|0011010>          --> +1.0000|0001011>         
+1.0000|0011010>          --> +1.0000|0001011>         
+1.0000|0000110>          --> +1.0000|0010111>         
+1.0000|0011010>          --> +1.0000|0001011>         
   ###   On generation 1 of 10000
*** population details: 5 best circuits 
 circuits {'cir6': [(5,), (1, 5, 0), (4, 6, 3), (2, 3)], 'cir7': [(5,), (1, 5, 0), (4, 6, 3), (2, 3), (3,)], 'cir50': [(2,), (3, 2, 4), (2, 6, 5), (4,)], 'cir41': [(1, 5, 0), (4, 6, 3), (2, 3), (3,), (5,)], 'cir22': [(2,), (3, 2, 4), (2, 6, 5), (4,), (6,)]}, 
 fitness [26.0, 26.0, 26.0, 26.0, 26.0] 

**** best transforamtion of this generation: 
+1.0000|0000101>          --> +1.0000|0000111>         
+1.0000|0001111>          --> +1.0000|0011001>         
+1.0000|0011010>          --> +1.0000|0001000>         
+1.0000|0010100>          --> +1.0000|0010110>         
+1.0000|0011010>          --> +1.0000|0001000>         
+1.0000|0011010>          --> +1.0000|0001000>         
+1.0000|0011010>          --> +1.0000|0001000>         
+1.0000|0000110>          --> +1.0000|0000100>         
+1.0000|0011010>          --> +1.0000|0001000>         
Infidelity :  2.0
   ###   On generation 2 of 10000
*** population details: 5 best circuits 
 circuits {'cir6': [(5,), (1, 5, 0), (4, 6, 3), (2, 3)], 'cir7': [(5,), (1, 5, 0), (4, 6, 3), (2, 3), (3,)], 'cir50': [(2,), (3, 2, 4), (2, 6, 5), (4,)], 'cir41': [(1, 5, 0), (4, 6, 3), (2, 3), (3,), (5,)], 'cir22': [(2,), (3, 2, 4), (2, 6, 5), (4,), (6,)]}, 
 fitness [26.0, 26.0, 26.0, 26.0, 26.0] 

**** best transforamtion of this generation: 
+1.0000|0000101>          --> +1.0000|0000111>         
+1.0000|0001111>          --> +1.0000|0011001>         
+1.0000|0011010>          --> +1.0000|0001000>         
+1.0000|0010100>          --> +1.0000|0010110>         
+1.0000|0011010>          --> +1.0000|0001000>         
+1.0000|0011010>          --> +1.0000|0001000>         
+1.0000|0011010>          --> +1.0000|0001000>         
+1.0000|0000110>          --> +1.0000|0000100>         
+1.0000|0011010>          --> +1.0000|0001000>         
Infidelity :  2.0
   ###   On generation 3 of 10000
*** population details: 5 best circuits 
 circuits {'cir6': [(5,), (1, 5, 0), (4, 6, 3), (2, 3)], 'cir7': [(5,), (1, 5, 0), (4, 6, 3), (2, 3), (3,)], 'cir50': [(2,), (3, 2, 4), (2, 6, 5), (4,)], 'cir41': [(1, 5, 0), (4, 6, 3), (2, 3), (3,), (5,)], 'cir22': [(2,), (3, 2, 4), (2, 6, 5), (4,), (6,)]}, 
 fitness [26.0, 26.0, 26.0, 26.0, 26.0] 

**** best transforamtion of this generation: 
+1.0000|0000101>          --> +1.0000|0000111>         
+1.0000|0001111>          --> +1.0000|0011001>         
+1.0000|0011010>          --> +1.0000|0001000>         
+1.0000|0010100>          --> +1.0000|0010110>         
+1.0000|0011010>          --> +1.0000|0001000>         
+1.0000|0011010>          --> +1.0000|0001000>         
+1.0000|0011010>          --> +1.0000|0001000>         
+1.0000|0000110>          --> +1.0000|0000100>         
+1.0000|0011010>          --> +1.0000|0001000>         
Infidelity :  2.0
   ###   On generation 4 of 10000
*** population details: 5 best circuits 
 circuits {'cir24': [(3,), (2,), (2, 6)], 'cir57': [(6, 3), (5,), (2, 4, 3), (4, 6), (2, 5), (4, 2), (2, 6)], 'cir32': [(1, 2, 6), (3, 6, 5), (6, 2, 5), (2, 6, 3), (4, 6)], 'cir6': [(5,), (1, 5, 0), (4, 6, 3), (2, 3)], 'cir7': [(5,), (1, 5, 0), (4, 6, 3), (2, 3), (3,)]}, 
 fitness [13.0, 13.0, 13.0, 26.0, 26.0] 

**** best transforamtion of this generation: 
+1.0000|0000101>          --> +1.0000|0001101>         
+1.0000|0001111>          --> +1.0000|0000111>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0010100>          --> +1.0000|0001100>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0000110>          --> +1.0000|0011110>         
+1.0000|0011010>          --> +1.0000|0000010>         
Infidelity :  1.0
   ###   On generation 5 of 10000
*** population details: 5 best circuits 
 circuits {'cir24': [(3,), (2,), (2, 6)], 'cir57': [(6, 3), (5,), (2, 4, 3), (4, 6), (2, 5), (4, 2), (2, 6)], 'cir32': [(1, 2, 6), (3, 6, 5), (6, 2, 5), (2, 6, 3), (4, 6)], 'cir38': [(2, 6), (3,), (5,), (2,)], 'cir69': [(2, 6), (3,), (5,), (2,), (6, 2)]}, 
 fitness [13.0, 13.0, 13.0, 13.0, 13.0] 

**** best transforamtion of this generation: 
+1.0000|0000101>          --> +1.0000|0001101>         
+1.0000|0001111>          --> +1.0000|0000111>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0010100>          --> +1.0000|0001100>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0000110>          --> +1.0000|0011110>         
+1.0000|0011010>          --> +1.0000|0000010>         
Infidelity :  1.0
   ###   On generation 6 of 10000
*** population details: 5 best circuits 
 circuits {'cir24': [(3,), (2,), (2, 6)], 'cir57': [(6, 3), (5,), (2, 4, 3), (4, 6), (2, 5), (4, 2), (2, 6)], 'cir32': [(1, 2, 6), (3, 6, 5), (6, 2, 5), (2, 6, 3), (4, 6)], 'cir38': [(2, 6), (3,), (5,), (2,)], 'cir69': [(2, 6), (3,), (5,), (2,), (6, 2)]}, 
 fitness [13.0, 13.0, 13.0, 13.0, 13.0] 

**** best transforamtion of this generation: 
+1.0000|0000101>          --> +1.0000|0001101>         
+1.0000|0001111>          --> +1.0000|0000111>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0010100>          --> +1.0000|0001100>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0000110>          --> +1.0000|0011110>         
+1.0000|0011010>          --> +1.0000|0000010>         
Infidelity :  1.0
   ###   On generation 7 of 10000
*** population details: 5 best circuits 
 circuits {'cir24': [(3,), (2,), (2, 6)], 'cir57': [(6, 3), (5,), (2, 4, 3), (4, 6), (2, 5), (4, 2), (2, 6)], 'cir32': [(1, 2, 6), (3, 6, 5), (6, 2, 5), (2, 6, 3), (4, 6)], 'cir38': [(2, 6), (3,), (5,), (2,)], 'cir69': [(2, 6), (3,), (5,), (2,), (6, 2)]}, 
 fitness [13.0, 13.0, 13.0, 13.0, 13.0] 

**** best transforamtion of this generation: 
+1.0000|0000101>          --> +1.0000|0001101>         
+1.0000|0001111>          --> +1.0000|0000111>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0010100>          --> +1.0000|0001100>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0000110>          --> +1.0000|0011110>         
+1.0000|0011010>          --> +1.0000|0000010>         
Infidelity :  1.0
   ###   On generation 8 of 10000
*** population details: 5 best circuits 
 circuits {'cir24': [(3,), (2,), (2, 6)], 'cir57': [(6, 3), (5,), (2, 4, 3), (4, 6), (2, 5), (4, 2), (2, 6)], 'cir32': [(1, 2, 6), (3, 6, 5), (6, 2, 5), (2, 6, 3), (4, 6)], 'cir38': [(2, 6), (3,), (5,), (2,)], 'cir69': [(2, 6), (3,), (5,), (2,), (6, 2)]}, 
 fitness [13.0, 13.0, 13.0, 13.0, 13.0] 

**** best transforamtion of this generation: 
+1.0000|0000101>          --> +1.0000|0001101>         
+1.0000|0001111>          --> +1.0000|0000111>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0010100>          --> +1.0000|0001100>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0000110>          --> +1.0000|0011110>         
+1.0000|0011010>          --> +1.0000|0000010>         
Infidelity :  1.0
   ###   On generation 9 of 10000
*** population details: 5 best circuits 
 circuits {'cir24': [(3,), (2,), (2, 6)], 'cir57': [(6, 3), (5,), (2, 4, 3), (4, 6), (2, 5), (4, 2), (2, 6)], 'cir32': [(1, 2, 6), (3, 6, 5), (6, 2, 5), (2, 6, 3), (4, 6)], 'cir38': [(2, 6), (3,), (5,), (2,)], 'cir69': [(2, 6), (3,), (5,), (2,), (6, 2)]}, 
 fitness [13.0, 13.0, 13.0, 13.0, 13.0] 

**** best transforamtion of this generation: 
+1.0000|0000101>          --> +1.0000|0001101>         
+1.0000|0001111>          --> +1.0000|0000111>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0010100>          --> +1.0000|0001100>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0000110>          --> +1.0000|0011110>         
+1.0000|0011010>          --> +1.0000|0000010>         
Infidelity :  1.0
   ###   On generation 10 of 10000
*** population details: 5 best circuits 
 circuits {'cir24': [(3,), (2,), (2, 6)], 'cir57': [(6, 3), (5,), (2, 4, 3), (4, 6), (2, 5), (4, 2), (2, 6)], 'cir32': [(1, 2, 6), (3, 6, 5), (6, 2, 5), (2, 6, 3), (4, 6)], 'cir38': [(2, 6), (3,), (5,), (2,)], 'cir69': [(2, 6), (3,), (5,), (2,), (6, 2)]}, 
 fitness [13.0, 13.0, 13.0, 13.0, 13.0] 

**** best transforamtion of this generation: 
+1.0000|0000101>          --> +1.0000|0001101>         
+1.0000|0001111>          --> +1.0000|0000111>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0010100>          --> +1.0000|0001100>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0000110>          --> +1.0000|0011110>         
+1.0000|0011010>          --> +1.0000|0000010>         
Infidelity :  1.0
   ###   On generation 11 of 10000
*** population details: 5 best circuits 
 circuits {'cir24': [(3,), (2,), (2, 6)], 'cir57': [(6, 3), (5,), (2, 4, 3), (4, 6), (2, 5), (4, 2), (2, 6)], 'cir32': [(1, 2, 6), (3, 6, 5), (6, 2, 5), (2, 6, 3), (4, 6)], 'cir38': [(2, 6), (3,), (5,), (2,)], 'cir69': [(2, 6), (3,), (5,), (2,), (6, 2)]}, 
 fitness [13.0, 13.0, 13.0, 13.0, 13.0] 

**** best transforamtion of this generation: 
+1.0000|0000101>          --> +1.0000|0001101>         
+1.0000|0001111>          --> +1.0000|0000111>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0010100>          --> +1.0000|0001100>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0000110>          --> +1.0000|0011110>         
+1.0000|0011010>          --> +1.0000|0000010>         
Infidelity :  1.0
   ###   On generation 12 of 10000
*** population details: 5 best circuits 
 circuits {'cir24': [(3,), (2,), (2, 6)], 'cir57': [(6, 3), (5,), (2, 4, 3), (4, 6), (2, 5), (4, 2), (2, 6)], 'cir32': [(1, 2, 6), (3, 6, 5), (6, 2, 5), (2, 6, 3), (4, 6)], 'cir38': [(2, 6), (3,), (5,), (2,)], 'cir69': [(2, 6), (3,), (5,), (2,), (6, 2)]}, 
 fitness [13.0, 13.0, 13.0, 13.0, 13.0] 

**** best transforamtion of this generation: 
+1.0000|0000101>          --> +1.0000|0001101>         
+1.0000|0001111>          --> +1.0000|0000111>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0010100>          --> +1.0000|0001100>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0000110>          --> +1.0000|0011110>         
+1.0000|0011010>          --> +1.0000|0000010>         
Infidelity :  1.0
   ###   On generation 13 of 10000
*** population details: 5 best circuits 
 circuits {'cir24': [(3,), (2,), (2, 6)], 'cir57': [(6, 3), (5,), (2, 4, 3), (4, 6), (2, 5), (4, 2), (2, 6)], 'cir32': [(1, 2, 6), (3, 6, 5), (6, 2, 5), (2, 6, 3), (4, 6)], 'cir38': [(2, 6), (3,), (5,), (2,)], 'cir69': [(2, 6), (3,), (5,), (2,), (6, 2)]}, 
 fitness [13.0, 13.0, 13.0, 13.0, 13.0] 

**** best transforamtion of this generation: 
+1.0000|0000101>          --> +1.0000|0001101>         
+1.0000|0001111>          --> +1.0000|0000111>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0010100>          --> +1.0000|0001100>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0000110>          --> +1.0000|0011110>         
+1.0000|0011010>          --> +1.0000|0000010>         
Infidelity :  1.0
   ###   On generation 14 of 10000
*** population details: 5 best circuits 
 circuits {'cir24': [(3,), (2,), (2, 6)], 'cir57': [(6, 3), (5,), (2, 4, 3), (4, 6), (2, 5), (4, 2), (2, 6)], 'cir32': [(1, 2, 6), (3, 6, 5), (6, 2, 5), (2, 6, 3), (4, 6)], 'cir38': [(2, 6), (3,), (5,), (2,)], 'cir69': [(2, 6), (3,), (5,), (2,), (6, 2)]}, 
 fitness [13.0, 13.0, 13.0, 13.0, 13.0] 

**** best transforamtion of this generation: 
+1.0000|0000101>          --> +1.0000|0001101>         
+1.0000|0001111>          --> +1.0000|0000111>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0010100>          --> +1.0000|0001100>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0000110>          --> +1.0000|0011110>         
+1.0000|0011010>          --> +1.0000|0000010>         
Infidelity :  1.0
   ###   On generation 15 of 10000
*** population details: 5 best circuits 
 circuits {'cir24': [(3,), (2,), (2, 6)], 'cir57': [(6, 3), (5,), (2, 4, 3), (4, 6), (2, 5), (4, 2), (2, 6)], 'cir32': [(1, 2, 6), (3, 6, 5), (6, 2, 5), (2, 6, 3), (4, 6)], 'cir38': [(2, 6), (3,), (5,), (2,)], 'cir69': [(2, 6), (3,), (5,), (2,), (6, 2)]}, 
 fitness [13.0, 13.0, 13.0, 13.0, 13.0] 

**** best transforamtion of this generation: 
+1.0000|0000101>          --> +1.0000|0001101>         
+1.0000|0001111>          --> +1.0000|0000111>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0010100>          --> +1.0000|0001100>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0011010>          --> +1.0000|0000010>         
+1.0000|0000110>          --> +1.0000|0011110>         
+1.0000|0011010>          --> +1.0000|0000010>         
Infidelity :  1.0
   ###   On generation 16 of 10000
*** population details: 5 best circuits 
 circuits {'cir35': [(2, 6), (5,), (6, 2), (6, 4, 2), (3,), (5, 6, 3), (4, 6), (2,), (2, 3, 4), (6, 3), (2, 5, 3)], 'cir24': [(3,), (2,), (2, 6)], 'cir57': [(6, 3), (5,), (2, 4, 3), (4, 6), (2, 5), (4, 2), (2, 6)], 'cir32': [(1, 2, 6), (3, 6, 5), (6, 2, 5), (2, 6, 3), (4, 6)], 'cir38': [(2, 6), (3,), (5,), (2,)]}, 
 fitness [0.0, 13.0, 13.0, 13.0, 13.0] 

**** best transforamtion of this generation: 
+1.0000|0000101>          --> +1.0000|0001000>         
+1.0000|0001111>          --> +1.0000|0000001>         
+1.0000|0011010>          --> +1.0000|0000101>         
+1.0000|0010100>          --> +1.0000|0001111>         
+1.0000|0011010>          --> +1.0000|0000101>         
+1.0000|0011010>          --> +1.0000|0000101>         
+1.0000|0011010>          --> +1.0000|0000101>         
+1.0000|0000110>          --> +1.0000|0001101>         
+1.0000|0011010>          --> +1.0000|0000101>         
Infidelity :  0.0
circuit: 
X(target=(0,))
X(target=(4,))
X(target=(1,))
X(target=(5,), control=(2, 1))
X(target=(5,), control=(1,))
X(target=(0,), control=(1,))
X(target=(5,), control=(3, 0))
X(target=(6,), control=(3, 1))
X(target=(6,), control=(5,))
X(target=(1,), control=(6, 2))
X(target=(6,), control=(5, 1))
X(target=(6,), control=(3, 1))
X(target=(1,), control=(6,))
X(target=(2,), control=(6,))
X(target=(5,))
X(target=(6,), control=(2,))
X(target=(6,), control=(4, 2))
X(target=(3,))
X(target=(5,), control=(6, 3))
X(target=(4,), control=(6,))
X(target=(2,))
X(target=(2,), control=(3, 4))
X(target=(6,), control=(3,))
X(target=(2,), control=(5, 3))

